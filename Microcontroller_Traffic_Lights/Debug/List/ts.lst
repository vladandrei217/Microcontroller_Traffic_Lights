
AVRASM ver. 2.1.30  C:\FAC\AN III\MC\Tema suplimentara\Debug\List\ts.asm Thu Dec 30 17:56:17 2021

C:\FAC\AN III\MC\Tema suplimentara\Debug\List\ts.asm(1416): warning: Register r3 already defined by the .DEF directive
C:\FAC\AN III\MC\Tema suplimentara\Debug\List\ts.asm(1417): warning: Register r4 already defined by the .DEF directive
C:\FAC\AN III\MC\Tema suplimentara\Debug\List\ts.asm(1418): warning: Register r5 already defined by the .DEF directive
C:\FAC\AN III\MC\Tema suplimentara\Debug\List\ts.asm(1419): warning: Register r6 already defined by the .DEF directive
C:\FAC\AN III\MC\Tema suplimentara\Debug\List\ts.asm(1420): warning: Register r7 already defined by the .DEF directive
C:\FAC\AN III\MC\Tema suplimentara\Debug\List\ts.asm(1421): warning: Register r8 already defined by the .DEF directive
C:\FAC\AN III\MC\Tema suplimentara\Debug\List\ts.asm(1422): warning: Register r9 already defined by the .DEF directive
C:\FAC\AN III\MC\Tema suplimentara\Debug\List\ts.asm(1423): warning: Register r10 already defined by the .DEF directive
C:\FAC\AN III\MC\Tema suplimentara\Debug\List\ts.asm(1424): warning: Register r11 already defined by the .DEF directive
C:\FAC\AN III\MC\Tema suplimentara\Debug\List\ts.asm(1425): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.46a 
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega164
                 ;Program type           : Application
                 ;Clock frequency        : 9.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega164
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x04FF
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _q=R3
                 	.DEF _q_msb=R4
                 	.DEF _rst=R5
                 	.DEF _rst_msb=R6
                 	.DEF _sel=R7
                 	.DEF _sel_msb=R8
                 	.DEF _clk=R9
                 	.DEF _clk_msb=R10
                 	.DEF _cnt=R11
                 	.DEF _cnt_msb=R12
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0047 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0076 	JMP  _timer0_ovf_isr
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00003e 0000
00003f 0000      	.DB  0x0,0x0,0x0,0x0
000040 0000
000041 0001      	.DB  0x0,0x0,0x1,0x0
000042 0000      	.DB  0x0,0x0
                 
                 
                 __GLOBAL_INI_TBL:
000043 000a      	.DW  0x0A
000044 0003      	.DW  0x03
000045 007c      	.DW  __REG_VARS*2
                 
                 _0xFFFFFFFF:
000046 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000047 94f8      	CLI
000048 27ee      	CLR  R30
000049 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004a e0f1      	LDI  R31,1
00004b bff5      	OUT  MCUCR,R31
00004c bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004d e08d      	LDI  R24,(14-2)+1
00004e e0a2      	LDI  R26,2
00004f 27bb      	CLR  R27
                 __CLEAR_REG:
000050 93ed      	ST   X+,R30
000051 958a      	DEC  R24
000052 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000053 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000054 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000055 e0a0      	LDI  R26,LOW(__SRAM_START)
000056 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000057 93ed      	ST   X+,R30
000058 9701      	SBIW R24,1
000059 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005a e8e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005c 9185      	LPM  R24,Z+
00005d 9195      	LPM  R25,Z+
00005e 9700      	SBIW R24,0
00005f f061      	BREQ __GLOBAL_INI_END
000060 91a5      	LPM  R26,Z+
000061 91b5      	LPM  R27,Z+
000062 9005      	LPM  R0,Z+
000063 9015      	LPM  R1,Z+
000064 01bf      	MOVW R22,R30
000065 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000066 9005      	LPM  R0,Z+
000067 920d      	ST   X+,R0
000068 9701      	SBIW R24,1
000069 f7e1      	BRNE __GLOBAL_INI_LOOP
00006a 01fb      	MOVW R30,R22
00006b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
00006c e0e0      	LDI  R30,__GPIOR0_INIT
00006d bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006e efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006f bfed      	OUT  SPL,R30
000070 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000071 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000072 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000073 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000074 940c 00fd 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x200
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;interrupt [19] void timer0_ovf_isr(void)
                 ; 0000 0037 {
                 
                 	.CSEG
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000076 920a      	ST   -Y,R0
000077 921a      	ST   -Y,R1
000078 939a      	ST   -Y,R25
000079 93aa      	ST   -Y,R26
00007a 93ba      	ST   -Y,R27
00007b 93ea      	ST   -Y,R30
00007c 93fa      	ST   -Y,R31
00007d b7ef      	IN   R30,SREG
00007e 93ea      	ST   -Y,R30
                 ; 0000 0038 // Reinitialize Timer 0 value
                 ; 0000 0039 TCNT0=0x4E;
00007f e4ee      	LDI  R30,LOW(78)
000080 bde6      	OUT  0x26,R30
                 ; 0000 003A // Place your code here
                 ; 0000 003B 
                 ; 0000 003C rst=PIND&MASKRST;
000081 b1e9      	IN   R30,0x9
000082 70e1      	ANDI R30,LOW(0x1)
000083 2e5e      	MOV  R5,R30
000084 2466      	CLR  R6
                 ; 0000 003D sel=PIND&MASKSEL;
000085 b1e9      	IN   R30,0x9
000086 70e2      	ANDI R30,LOW(0x2)
000087 2e7e      	MOV  R7,R30
000088 2488      	CLR  R8
                 ; 0000 003E 
                 ; 0000 003F 
                 ; 0000 0040 if(rst)
000089 2c05      	MOV  R0,R5
00008a 2806      	OR   R0,R6
00008b f021      	BREQ _0x3
                 ; 0000 0041 {
                 ; 0000 0042 q=0;
00008c 2433      	CLR  R3
00008d 2444      	CLR  R4
                 ; 0000 0043 cnt=0;
00008e 24bb      	CLR  R11
00008f 24cc      	CLR  R12
                 ; 0000 0044 }
                 ; 0000 0045 if(sel)
                 _0x3:
000090 2c07      	MOV  R0,R7
000091 2808      	OR   R0,R8
000092 f031      	BREQ _0x4
                 ; 0000 0046 {
                 ; 0000 0047 q=4;
000093 e0e4      	LDI  R30,LOW(4)
000094 e0f0      	LDI  R31,HIGH(4)
                +
000095 2e3e     +MOV R3 , R30
000096 2e4f     +MOV R4 , R31
                 	__PUTW1R 3,4
                 ; 0000 0048 cnt=0;
000097 24bb      	CLR  R11
000098 24cc      	CLR  R12
                 ; 0000 0049 }
                 ; 0000 004A 
                 ; 0000 004B 
                 ; 0000 004C if(q==0 || q==2 || q==4)//semafoarele sunt fie de culoare rosie sau verde
                 _0x4:
000099 2400      	CLR  R0
00009a 1403      	CP   R0,R3
00009b 0404      	CPC  R0,R4
00009c f051      	BREQ _0x6
00009d e0e2      	LDI  R30,LOW(2)
00009e e0f0      	LDI  R31,HIGH(2)
00009f 15e3      	CP   R30,R3
0000a0 05f4      	CPC  R31,R4
0000a1 f029      	BREQ _0x6
0000a2 e0e4      	LDI  R30,LOW(4)
0000a3 e0f0      	LDI  R31,HIGH(4)
0000a4 15e3      	CP   R30,R3
0000a5 05f4      	CPC  R31,R4
0000a6 f439      	BRNE _0x5
                 _0x6:
                 ; 0000 004D {
                 ; 0000 004E if(cnt==MASKVERDEROSU)//verific daca in starea de verde/rosu s-a asteptat durata stabilita
0000a7 e0e8      	LDI  R30,LOW(8)
0000a8 e0f0      	LDI  R31,HIGH(8)
0000a9 15eb      	CP   R30,R11
0000aa 05fc      	CPC  R31,R12
0000ab f409      	BRNE _0x8
                 ; 0000 004F {
                 ; 0000 0050 cnt=0;
0000ac d0aa      	RCALL SUBOPT_0x0
                 ; 0000 0051 q=(q+1)%6;
                 ; 0000 0052 }
                 ; 0000 0053 }
                 _0x8:
                 ; 0000 0054 else //semafoarele sunt de culoare galbena
0000ad c006      	RJMP _0x9
                 _0x5:
                 ; 0000 0055 {
                 ; 0000 0056 if(cnt==MASKGALBEN)//verific daca in starea de galben s-a asteptat durata stabilita
0000ae e0e2      	LDI  R30,LOW(2)
0000af e0f0      	LDI  R31,HIGH(2)
0000b0 15eb      	CP   R30,R11
0000b1 05fc      	CPC  R31,R12
0000b2 f409      	BRNE _0xA
                 ; 0000 0057 {
                 ; 0000 0058 cnt=0;
0000b3 d0a3      	RCALL SUBOPT_0x0
                 ; 0000 0059 q=(q+1)%6;
                 ; 0000 005A }
                 ; 0000 005B }
                 _0xA:
                 _0x9:
                 ; 0000 005C 
                 ; 0000 005D 
                 ; 0000 005E if(!cnt)
0000b4 2c0b      	MOV  R0,R11
0000b5 280c      	OR   R0,R12
0000b6 f581      	BRNE _0xB
                 ; 0000 005F {
                 ; 0000 0060 switch(q)
                +
0000b7 2de3     +MOV R30 , R3
0000b8 2df4     +MOV R31 , R4
                 	__GETW1R 3,4
                 ; 0000 0061 {
                 ; 0000 0062 case 0:
0000b9 9730      	SBIW R30,0
0000ba f421      	BRNE _0xF
                 ; 0000 0063 PORTB=~MASKS0_MASINI;
0000bb efef      	LDI  R30,LOW(255)
0000bc b9e5      	OUT  0x5,R30
                 ; 0000 0064 PORTC=~MASKS0_PIETONI;
0000bd efe5      	LDI  R30,LOW(245)
0000be c027      	RJMP _0x19
                 ; 0000 0065 break;
                 ; 0000 0066 case 1:
                 _0xF:
0000bf 30e1      	CPI  R30,LOW(0x1)
0000c0 e0a0      	LDI  R26,HIGH(0x1)
0000c1 07fa      	CPC  R31,R26
0000c2 f421      	BRNE _0x10
                 ; 0000 0067 PORTB=~MASKS1_MASINI;
0000c3 eeee      	LDI  R30,LOW(238)
0000c4 b9e5      	OUT  0x5,R30
                 ; 0000 0068 PORTC=~MASKS1_PIETONI;
0000c5 ede5      	LDI  R30,LOW(213)
0000c6 c01f      	RJMP _0x19
                 ; 0000 0069 break;
                 ; 0000 006A case 2:
                 _0x10:
0000c7 30e2      	CPI  R30,LOW(0x2)
0000c8 e0a0      	LDI  R26,HIGH(0x2)
0000c9 07fa      	CPC  R31,R26
0000ca f421      	BRNE _0x11
                 ; 0000 006B PORTB=~MASKS2_MASINI;
0000cb eded      	LDI  R30,LOW(221)
0000cc b9e5      	OUT  0x5,R30
                 ; 0000 006C PORTC=~MASKS3_PIETONI;
0000cd eeef      	LDI  R30,LOW(239)
0000ce c017      	RJMP _0x19
                 ; 0000 006D break;
                 ; 0000 006E case 3:
                 _0x11:
0000cf 30e3      	CPI  R30,LOW(0x3)
0000d0 e0a0      	LDI  R26,HIGH(0x3)
0000d1 07fa      	CPC  R31,R26
0000d2 f421      	BRNE _0x12
                 ; 0000 006F PORTB=~MASKS3_MASINI;
0000d3 eeee      	LDI  R30,LOW(238)
0000d4 b9e5      	OUT  0x5,R30
                 ; 0000 0070 PORTC=~MASKS3_PIETONI;
0000d5 eeef      	LDI  R30,LOW(239)
0000d6 c00f      	RJMP _0x19
                 ; 0000 0071 break;
                 ; 0000 0072 case 4:
                 _0x12:
0000d7 30e4      	CPI  R30,LOW(0x4)
0000d8 e0a0      	LDI  R26,HIGH(0x4)
0000d9 07fa      	CPC  R31,R26
0000da f421      	BRNE _0x13
                 ; 0000 0073 PORTB=~MASKS4_MASINI;
0000db e8e8      	LDI  R30,LOW(136)
0000dc b9e5      	OUT  0x5,R30
                 ; 0000 0074 PORTC=~MASKS4_PIETONI;
0000dd eeea      	LDI  R30,LOW(234)
0000de c007      	RJMP _0x19
                 ; 0000 0075 
                 ; 0000 0076 break;
                 ; 0000 0077 case 5:
                 _0x13:
0000df 30e5      	CPI  R30,LOW(0x5)
0000e0 e0a0      	LDI  R26,HIGH(0x5)
0000e1 07fa      	CPC  R31,R26
0000e2 f421      	BRNE _0xE
                 ; 0000 0078 PORTB=~MASKS5_MASINI;
0000e3 e4e4      	LDI  R30,LOW(68)
0000e4 b9e5      	OUT  0x5,R30
                 ; 0000 0079 PORTC=~MASKS5_PIETONI;
0000e5 ecea      	LDI  R30,LOW(202)
                 _0x19:
0000e6 b9e8      	OUT  0x8,R30
                 ; 0000 007A break;
                 ; 0000 007B }
                 _0xE:
                 ; 0000 007C }
                 ; 0000 007D 
                 ; 0000 007E clk=(clk+1)%2;
                 _0xB:
                +
0000e7 2de9     +MOV R30 , R9
0000e8 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
0000e9 9631      	ADIW R30,1
0000ea e0a1      	LDI  R26,LOW(1)
0000eb e0b0      	LDI  R27,HIGH(1)
0000ec d09a      	RCALL __MANDW12
                +
0000ed 2e9e     +MOV R9 , R30
0000ee 2eaf     +MOV R10 , R31
                 	__PUTW1R 9,10
                 ; 0000 007F 
                 ; 0000 0080 cnt++;
0000ef e0e1      	LDI  R30,LOW(1)
0000f0 e0f0      	LDI  R31,HIGH(1)
                +
0000f1 0ebe     +ADD R11 , R30
0000f2 1ecf     +ADC R12 , R31
                 	__ADDWRR 11,12,30,31
                 ; 0000 0081 
                 ; 0000 0082 }
0000f3 91e9      	LD   R30,Y+
0000f4 bfef      	OUT  SREG,R30
0000f5 91f9      	LD   R31,Y+
0000f6 91e9      	LD   R30,Y+
0000f7 91b9      	LD   R27,Y+
0000f8 91a9      	LD   R26,Y+
0000f9 9199      	LD   R25,Y+
0000fa 9019      	LD   R1,Y+
0000fb 9009      	LD   R0,Y+
0000fc 9518      	RETI
                 ; .FEND
                 ;void main(void)
                 ; 0000 0087 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0088 // Declare your local variables here
                 ; 0000 0089 
                 ; 0000 008A // Crystal Oscillator division factor: 1
                 ; 0000 008B #pragma optsize-
                 ; 0000 008C CLKPR=(1<<CLKPCE);
0000fd e8e0      	LDI  R30,LOW(128)
0000fe 93e0 0061 	STS  97,R30
                 ; 0000 008D CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
000100 e0e0      	LDI  R30,LOW(0)
000101 93e0 0061 	STS  97,R30
                 ; 0000 008E #ifdef _OPTIMIZE_SIZE_
                 ; 0000 008F #pragma optsize+
                 ; 0000 0090 #endif
                 ; 0000 0091 
                 ; 0000 0092 // Input/Output Ports initialization
                 ; 0000 0093 // Port A initialization
                 ; 0000 0094 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0095 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000103 b9e1      	OUT  0x1,R30
                 ; 0000 0096 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0097 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000104 b9e2      	OUT  0x2,R30
                 ; 0000 0098 
                 ; 0000 0099 // Port B initialization
                 ; 0000 009A // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 009B DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
000105 efef      	LDI  R30,LOW(255)
000106 b9e4      	OUT  0x4,R30
                 ; 0000 009C // State: Bit7=1 Bit6=1 Bit5=1 Bit4=1 Bit3=1 Bit2=1 Bit1=1 Bit0=1
                 ; 0000 009D PORTB=(1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4) | (1<<PORTB3) | (1<<PORTB2) | (1<<PORTB1) | (1<<PORTB0);
000107 b9e5      	OUT  0x5,R30
                 ; 0000 009E 
                 ; 0000 009F // Port C initialization
                 ; 0000 00A0 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 00A1 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
000108 b9e7      	OUT  0x7,R30
                 ; 0000 00A2 // State: Bit7=1 Bit6=1 Bit5=1 Bit4=1 Bit3=1 Bit2=1 Bit1=1 Bit0=1
                 ; 0000 00A3 PORTC=(1<<PORTC7) | (1<<PORTC6) | (1<<PORTC5) | (1<<PORTC4) | (1<<PORTC3) | (1<<PORTC2) | (1<<PORTC1) | (1<<PORTC0);
000109 b9e8      	OUT  0x8,R30
                 ; 0000 00A4 
                 ; 0000 00A5 // Port D initialization
                 ; 0000 00A6 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 00A7 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00010a e0e0      	LDI  R30,LOW(0)
00010b b9ea      	OUT  0xA,R30
                 ; 0000 00A8 // State: Bit7=P Bit6=P Bit5=P Bit4=P Bit3=P Bit2=P Bit1=P Bit0=P
                 ; 0000 00A9 PORTD=(1<<PORTD7) | (1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
00010c efef      	LDI  R30,LOW(255)
00010d b9eb      	OUT  0xB,R30
                 ; 0000 00AA 
                 ; 0000 00AB // Timer/Counter 0 initialization
                 ; 0000 00AC // Clock source: System Clock
                 ; 0000 00AD // Clock value: 8.789 kHz
                 ; 0000 00AE // Mode: Normal top=0xFF
                 ; 0000 00AF // OC0A output: Disconnected
                 ; 0000 00B0 // OC0B output: Disconnected
                 ; 0000 00B1 // Timer Period: 20.252 ms
                 ; 0000 00B2 TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
00010e e0e0      	LDI  R30,LOW(0)
00010f bde4      	OUT  0x24,R30
                 ; 0000 00B3 TCCR0B=(0<<WGM02) | (1<<CS02) | (0<<CS01) | (1<<CS00);
000110 e0e5      	LDI  R30,LOW(5)
000111 bde5      	OUT  0x25,R30
                 ; 0000 00B4 TCNT0=0x4E;
000112 e4ee      	LDI  R30,LOW(78)
000113 bde6      	OUT  0x26,R30
                 ; 0000 00B5 OCR0A=0x00;
000114 e0e0      	LDI  R30,LOW(0)
000115 bde7      	OUT  0x27,R30
                 ; 0000 00B6 OCR0B=0x00;
000116 bde8      	OUT  0x28,R30
                 ; 0000 00B7 
                 ; 0000 00B8 // Timer/Counter 1 initialization
                 ; 0000 00B9 // Clock source: System Clock
                 ; 0000 00BA // Clock value: Timer1 Stopped
                 ; 0000 00BB // Mode: Normal top=0xFFFF
                 ; 0000 00BC // OC1A output: Disconnected
                 ; 0000 00BD // OC1B output: Disconnected
                 ; 0000 00BE // Noise Canceler: Off
                 ; 0000 00BF // Input Capture on Falling Edge
                 ; 0000 00C0 // Timer1 Overflow Interrupt: Off
                 ; 0000 00C1 // Input Capture Interrupt: Off
                 ; 0000 00C2 // Compare A Match Interrupt: Off
                 ; 0000 00C3 // Compare B Match Interrupt: Off
                 ; 0000 00C4 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000117 93e0 0080 	STS  128,R30
                 ; 0000 00C5 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000119 93e0 0081 	STS  129,R30
                 ; 0000 00C6 TCNT1H=0x00;
00011b 93e0 0085 	STS  133,R30
                 ; 0000 00C7 TCNT1L=0x00;
00011d 93e0 0084 	STS  132,R30
                 ; 0000 00C8 ICR1H=0x00;
00011f 93e0 0087 	STS  135,R30
                 ; 0000 00C9 ICR1L=0x00;
000121 93e0 0086 	STS  134,R30
                 ; 0000 00CA OCR1AH=0x00;
000123 93e0 0089 	STS  137,R30
                 ; 0000 00CB OCR1AL=0x00;
000125 93e0 0088 	STS  136,R30
                 ; 0000 00CC OCR1BH=0x00;
000127 93e0 008b 	STS  139,R30
                 ; 0000 00CD OCR1BL=0x00;
000129 93e0 008a 	STS  138,R30
                 ; 0000 00CE 
                 ; 0000 00CF // Timer/Counter 2 initialization
                 ; 0000 00D0 // Clock source: System Clock
                 ; 0000 00D1 // Clock value: Timer2 Stopped
                 ; 0000 00D2 // Mode: Normal top=0xFF
                 ; 0000 00D3 // OC2A output: Disconnected
                 ; 0000 00D4 // OC2B output: Disconnected
                 ; 0000 00D5 ASSR=(0<<EXCLK) | (0<<AS2);
00012b 93e0 00b6 	STS  182,R30
                 ; 0000 00D6 TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
00012d 93e0 00b0 	STS  176,R30
                 ; 0000 00D7 TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
00012f 93e0 00b1 	STS  177,R30
                 ; 0000 00D8 TCNT2=0x00;
000131 93e0 00b2 	STS  178,R30
                 ; 0000 00D9 OCR2A=0x00;
000133 93e0 00b3 	STS  179,R30
                 ; 0000 00DA OCR2B=0x00;
000135 93e0 00b4 	STS  180,R30
                 ; 0000 00DB 
                 ; 0000 00DC // Timer/Counter 0 Interrupt(s) initialization
                 ; 0000 00DD TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (1<<TOIE0);
000137 e0e1      	LDI  R30,LOW(1)
000138 93e0 006e 	STS  110,R30
                 ; 0000 00DE 
                 ; 0000 00DF // Timer/Counter 1 Interrupt(s) initialization
                 ; 0000 00E0 TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
00013a e0e0      	LDI  R30,LOW(0)
00013b 93e0 006f 	STS  111,R30
                 ; 0000 00E1 
                 ; 0000 00E2 // Timer/Counter 2 Interrupt(s) initialization
                 ; 0000 00E3 TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
00013d 93e0 0070 	STS  112,R30
                 ; 0000 00E4 
                 ; 0000 00E5 // External Interrupt(s) initialization
                 ; 0000 00E6 // INT0: Off
                 ; 0000 00E7 // INT1: Off
                 ; 0000 00E8 // INT2: Off
                 ; 0000 00E9 // Interrupt on any change on pins PCINT0-7: Off
                 ; 0000 00EA // Interrupt on any change on pins PCINT8-15: Off
                 ; 0000 00EB // Interrupt on any change on pins PCINT16-23: Off
                 ; 0000 00EC // Interrupt on any change on pins PCINT24-31: Off
                 ; 0000 00ED EICRA=(0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
00013f 93e0 0069 	STS  105,R30
                 ; 0000 00EE EIMSK=(0<<INT2) | (0<<INT1) | (0<<INT0);
000141 bbed      	OUT  0x1D,R30
                 ; 0000 00EF PCICR=(0<<PCIE3) | (0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
000142 93e0 0068 	STS  104,R30
                 ; 0000 00F0 
                 ; 0000 00F1 // USART0 initialization
                 ; 0000 00F2 // USART0 disabled
                 ; 0000 00F3 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
000144 93e0 00c1 	STS  193,R30
                 ; 0000 00F4 
                 ; 0000 00F5 // USART1 initialization
                 ; 0000 00F6 // USART1 disabled
                 ; 0000 00F7 UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
000146 93e0 00c9 	STS  201,R30
                 ; 0000 00F8 
                 ; 0000 00F9 // Analog Comparator initialization
                 ; 0000 00FA // Analog Comparator: Off
                 ; 0000 00FB // The Analog Comparator's positive input is
                 ; 0000 00FC // connected to the AIN0 pin
                 ; 0000 00FD // The Analog Comparator's negative input is
                 ; 0000 00FE // connected to the AIN1 pin
                 ; 0000 00FF ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000148 e8e0      	LDI  R30,LOW(128)
000149 bfe0      	OUT  0x30,R30
                 ; 0000 0100 ADCSRB=(0<<ACME);
00014a e0e0      	LDI  R30,LOW(0)
00014b 93e0 007b 	STS  123,R30
                 ; 0000 0101 // Digital input buffer on AIN0: On
                 ; 0000 0102 // Digital input buffer on AIN1: On
                 ; 0000 0103 DIDR1=(0<<AIN0D) | (0<<AIN1D);
00014d 93e0 007f 	STS  127,R30
                 ; 0000 0104 
                 ; 0000 0105 // ADC initialization
                 ; 0000 0106 // ADC disabled
                 ; 0000 0107 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
00014f 93e0 007a 	STS  122,R30
                 ; 0000 0108 
                 ; 0000 0109 // SPI initialization
                 ; 0000 010A // SPI disabled
                 ; 0000 010B SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
000151 bdec      	OUT  0x2C,R30
                 ; 0000 010C 
                 ; 0000 010D // TWI initialization
                 ; 0000 010E // TWI disabled
                 ; 0000 010F TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
000152 93e0 00bc 	STS  188,R30
                 ; 0000 0110 
                 ; 0000 0111 // Globally enable interrupts
                 ; 0000 0112 #asm("sei")
000154 9478      	SEI
                 ; 0000 0113 
                 ; 0000 0114 while (1)
                 _0x15:
                 ; 0000 0115 {
                 ; 0000 0116 // Place your code here
                 ; 0000 0117 
                 ; 0000 0118 }
000155 cfff      	RJMP _0x15
                 ; 0000 0119 }
                 _0x18:
000156 cfff      	RJMP _0x18
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
000157 24bb      	CLR  R11
000158 24cc      	CLR  R12
                +
000159 2da3     +MOV R26 , R3
00015a 2db4     +MOV R27 , R4
                 	__GETW2R 3,4
00015b 9611      	ADIW R26,1
00015c e0e6      	LDI  R30,LOW(6)
00015d e0f0      	LDI  R31,HIGH(6)
00015e d01a      	RCALL __MODW21
                +
00015f 2e3e     +MOV R3 , R30
000160 2e4f     +MOV R4 , R31
                 	__PUTW1R 3,4
000161 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __ANEGW1:
000162 95f1      	NEG  R31
000163 95e1      	NEG  R30
000164 40f0      	SBCI R31,0
000165 9508      	RET
                 
                 __DIVW21U:
000166 2400      	CLR  R0
000167 2411      	CLR  R1
000168 e190      	LDI  R25,16
                 __DIVW21U1:
000169 0faa      	LSL  R26
00016a 1fbb      	ROL  R27
00016b 1c00      	ROL  R0
00016c 1c11      	ROL  R1
00016d 1a0e      	SUB  R0,R30
00016e 0a1f      	SBC  R1,R31
00016f f418      	BRCC __DIVW21U2
000170 0e0e      	ADD  R0,R30
000171 1e1f      	ADC  R1,R31
000172 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000173 60a1      	SBR  R26,1
                 __DIVW21U3:
000174 959a      	DEC  R25
000175 f799      	BRNE __DIVW21U1
000176 01fd      	MOVW R30,R26
000177 01d0      	MOVW R26,R0
000178 9508      	RET
                 
                 __MODW21:
000179 94e8      	CLT
00017a ffb7      	SBRS R27,7
00017b c004      	RJMP __MODW211
00017c 95b1      	NEG  R27
00017d 95a1      	NEG  R26
00017e 40b0      	SBCI R27,0
00017f 9468      	SET
                 __MODW211:
000180 fdf7      	SBRC R31,7
000181 dfe0      	RCALL __ANEGW1
000182 dfe3      	RCALL __DIVW21U
000183 01fd      	MOVW R30,R26
000184 f40e      	BRTC __MODW212
000185 dfdc      	RCALL __ANEGW1
                 __MODW212:
000186 9508      	RET
                 
                 __MANDW12:
000187 94e8      	CLT
000188 fff7      	SBRS R31,7
000189 c002      	RJMP __MANDW121
00018a dfd7      	RCALL __ANEGW1
00018b 9468      	SET
                 __MANDW121:
00018c 23ea      	AND  R30,R26
00018d 23fb      	AND  R31,R27
00018e f40e      	BRTC __MANDW122
00018f dfd2      	RCALL __ANEGW1
                 __MANDW122:
000190 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega164 register use summary:
r0 :  20 r1 :   7 r2 :   0 r3 :   8 r4 :   8 r5 :   2 r6 :   2 r7 :   2 
r8 :   2 r9 :   2 r10:   2 r11:   7 r12:   7 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:   7 r25:   6 r26:  25 r27:  12 r28:   1 r29:   1 r30: 136 r31:  34 
x  :   3 y  :  16 z  :   7 
Registers used: 24 out of 35 (68.6%)

ATmega164 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   2 
adiw  :   2 and   :   2 andi  :   2 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   5 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :  14 brpl  :   0 brsh  :   0 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  15 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   0 
cp    :   5 cpc   :  10 cpi   :   5 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   3 inc   :   0 jmp   :  32 ld    :   8 ldd   :   0 ldi   :  62 
lds   :   0 lpm   :   7 lsl   :   1 lsr   :   0 mov   :  17 movw  :   6 
mul   :   0 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   3 
ori   :   0 out   :  31 pop   :   0 push  :   0 rcall :   9 ret   :   5 
reti  :   1 rjmp  :  12 rol   :   3 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   4 sbr   :   1 sbrc  :   1 
sbrs  :   2 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  11 std   :   0 sts   :  29 sub   :   1 subi  :   0 swap  :   0 
tst   :   0 wdr   :   0 
Instructions used: 43 out of 116 (37.1%)

ATmega164 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000322    784     18    802   16384   4.9%
[.dseg] 0x000100 0x000200      0      0      0    1024   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 10 warnings
